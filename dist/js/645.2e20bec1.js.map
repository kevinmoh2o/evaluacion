{"version":3,"file":"js/645.2e20bec1.js","mappings":"6LACwBA,MAAM,qB,SAIDA,MAAM,qB,SAIRA,MAAM,qB,iHARpBC,EAAAC,YAAS,WAApBC,EAAAA,EAAAA,IAEM,MAFNC,EAEM,EADJC,EAAAA,EAAAA,IAA2BC,MAGbL,EAAAM,YAAS,WAAzBJ,EAAAA,EAAAA,IAEM,MAFNK,EAEM,EADJH,EAAAA,EAAAA,IAA2BI,MAGbR,EAAAS,UAAO,WAAvBP,EAAAA,EAAAA,IAEM,MAFNQ,EAEM,EADJN,EAAAA,EAAAA,IAAuBO,OAAA,c,CAO3B,OACEC,KAAM,mBACNC,WAAY,CACVC,aAAaC,EAAAA,EAAAA,KAAqB,IAAM,gCACxCC,WAAWD,EAAAA,EAAAA,KAAqB,IAAM,gCACtCE,aAAaF,EAAAA,EAAAA,KAAqB,IAAM,iCAE1CG,OACE,MAAO,CACLjB,WAAW,EACXK,WAAW,EACXG,SAAS,EAEb,EACAU,MAAO,CACLC,SAAUC,UAEZC,UAEEC,KAAKC,kBACP,EAEAC,QAAS,CACPC,yBACEH,KAAKtB,WAAY,QACXsB,KAAKI,MAAM,KACjBC,QAAQC,IAAI,CAAC5B,UAAUsB,KAAKtB,UAAUK,UAAUiB,KAAKjB,UAAUG,QAAQc,KAAKd,UAC5E,UAEQc,KAAKH,WAEXG,KAAKjB,WAAY,CACnB,CAAE,MAAOwB,GAEPP,KAAKd,SAAU,CACjB,CAAE,QAEAc,KAAKtB,WAAY,CACnB,CACF,EAaAyB,YAAYK,GACV,aAAa,IAAIC,SAAQC,GAAWC,WAAWD,EAASF,IAC1D,I,UClEJ,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://evaluacion/./src/components/indicadores/LoadingMainView.vue","webpack://evaluacion/./src/components/indicadores/LoadingMainView.vue?b31d"],"sourcesContent":["<template>\r\n  <div v-if=\"isLoading\" class=\"loading-indicator\">\r\n    <LoadingView></LoadingView>\r\n  </div>\r\n\r\n  <div v-else-if=\"isSuccess\" class=\"loading-indicator\">\r\n    <SuccessView></SuccessView>\r\n  </div>\r\n\r\n  <div v-else-if=\"isError\" class=\"loading-indicator\">\r\n    <ErrorView></ErrorView>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { defineAsyncComponent } from 'vue'\r\n\r\nexport default {\r\n  name: 'indicador-layout',\r\n  components: {\r\n    SuccessView: defineAsyncComponent(() => import('@/components/indicadores/SuccessView.vue')),\r\n    ErrorView: defineAsyncComponent(() => import('@/components/indicadores/ErrorView.vue')),\r\n    LoadingView: defineAsyncComponent(() => import('@/components/indicadores/LoadingView.vue')),\r\n  },\r\n  data() {\r\n    return {\r\n      isLoading: false,\r\n      isSuccess: false,\r\n      isError: false,\r\n    };\r\n  },\r\n  props: {\r\n    callback: Function, // Propiedad para recibir la función de retorno de llamada\r\n  },\r\n  mounted() {\r\n    // Inicia automáticamente el proceso al montar el componente\r\n    this.realizarPeticion();\r\n  },\r\n\r\n  methods: {\r\n    async realizarPeticion() {\r\n      this.isLoading = true;\r\n      await this.sleep(60000);\r\n      console.log({isLoading:this.isLoading,isSuccess:this.isSuccess,isError:this.isError})\r\n      try {\r\n        // Realizar tu petición asíncrona aquí\r\n        await this.callback();\r\n        // La petición fue exitosa\r\n        this.isSuccess = true;\r\n      } catch (error) {\r\n        // Hubo un error en la petición\r\n        this.isError = true;\r\n      } finally {\r\n        // Independientemente del resultado, la carga ha terminado\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n\r\n    /* async miPeticionAsync() {\r\n      // Simular una petición asíncrona (reemplaza con tu lógica real)\r\n      return new Promise((resolve, reject) => {\r\n        console.log(reject)\r\n        setTimeout(() => {\r\n          // Supongamos que la petición es exitosa después de 2 segundos\r\n          resolve();\r\n          // Si hubo un error, puedes llamar a reject() en lugar de resolve()\r\n        }, 2000);\r\n      });\r\n    }, */\r\n    async sleep(ms) {\r\n      return await new Promise(resolve => setTimeout(resolve, ms));\r\n    },\r\n  },\r\n};\r\n</script>\r\n<!-- <script>\r\nimport { mapActions, mapGetters } from 'vuex'\r\nimport { defineAsyncComponent } from 'vue'\r\n\r\nexport default {\r\n  name: 'indicador-layout',\r\n  components: {\r\n    SuccessView: defineAsyncComponent(() => import('@/components/indicadores/SuccessView.vue')),\r\n    ErrorView: defineAsyncComponent(() => import('@/components/indicadores/ErrorView.vue')),\r\n    LoadingView: defineAsyncComponent(() => import('@/components/indicadores/LoadingView.vue')),\r\n  },\r\n  props: {\r\n    props: {\r\n      callback: Function, // Propiedad para recibir la función de retorno de llamada\r\n    },\r\n  },\r\n  computed: {\r\n    isLoading() {\r\n      return this.getEstado().loading;\r\n    },\r\n    isSuccess() {\r\n      return this.getEstado().success;\r\n    },\r\n    isError() {\r\n      return this.getEstado().error;\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initializeState();\r\n  },\r\n  methods: {\r\n    ...mapActions('programacionModule', ['deleteEntry', 'setIsLoading']),\r\n    ...mapGetters('programacionModule', ['getEstado']),\r\n    async onPressCrear() {\r\n      // Tu lógica aquí\r\n    },\r\n    async sleep(ms) {\r\n      return await new Promise(resolve => setTimeout(resolve, ms));\r\n    },\r\n    async initializeState() {\r\n      console.log(\"created\");\r\n      console.log(this.getEstado());\r\n      this.setIsLoading({ loading: true, success: false, error: false });\r\n      console.log(this.getEstado());\r\n      await this.sleep(3000);\r\n      this.setIsLoading({ loading: false, success: true, error: false });\r\n    },\r\n    invokeCallback() {\r\n      if (typeof this.callback === \"function\") {\r\n        this.callback();\r\n      }\r\n    },\r\n  },\r\n}\r\n</script> -->\r\n<style lang=\"scss\" scoped></style>\r\n","import { render } from \"./LoadingMainView.vue?vue&type=template&id=8ac2ad8c\"\nimport script from \"./LoadingMainView.vue?vue&type=script&lang=js\"\nexport * from \"./LoadingMainView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\k_ev_\\\\OneDrive\\\\Escritorio\\\\desarrollo\\\\front\\\\ft_html_upch_consejeria\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","$data","isLoading","_createElementBlock","_hoisted_1","_createVNode","_component_LoadingView","isSuccess","_hoisted_2","_component_SuccessView","isError","_hoisted_3","_component_ErrorView","name","components","SuccessView","defineAsyncComponent","ErrorView","LoadingView","data","props","callback","Function","mounted","this","realizarPeticion","methods","async","sleep","console","log","error","ms","Promise","resolve","setTimeout","__exports__","render"],"sourceRoot":""}